package require Itcl
package require Thread
package provide Mdsc 1.0

#==============================================================================
# CLASS: MemObj
#==============================================================================
# This is a wrapper arround the "memobj" command.
#==============================================================================
if {[itcl::find class MemObj] != ""} {
    itcl::delete class MemObj
}

itcl::class MemObj {
    constructor {args} {
	set _mobj [mdsc::memobj create]
	eval configure $args
    }

    destructor {
	mdsc::memobj delete $_mobj
    }

    # Clear the object
    public method clear {} {
	mdsc::memobj clear $_mobj
    }

    # Return the size (# of bytes)
    public method size {} {
	mdsc::memobj size $_mobj
    }

    # Get a range of bytes from "start" up to "nbytes" in total
    public method get {{start 0} {nbytes -1}} {
	mdsc::memobj get $_mobj $start $nbytes
    }

    # Append the given bytes to the end of the object
    public method append {binarystring {start 0} {nbytes -1}} {
	mdsc::memobj append $_mobj $binarystring
    }

    public method load {fname} {
	mdsc::memobj load $_mobj $fname
    }

    public method store {fname} {
	mdsc::memobj store $_mobj $fname
    }

    public method md5sum {} {
	mdsc::memobj md5sum $_mobj
    }

    public method makerandom {size {seed 0}} {
	mdsc::memobj makerandom $_mobj $size $seed
    }

    public method copyfromfile {channel {nbytes -1}} {
	mdsc::memobj copyfromfile $_mobj $channel $nbytes
    }

    public method copytofile {channel {offset 0} {nbytes -1}} {
	mdsc::memobj copytofile $_mobj $channel $offset $nbytes
    }

    public method get_handle {} {
	return $_mobj
    }

    # Commit suicide...
    public method delete {} {
	itcl::delete object $this
    }

    #-------------------------------------
    # PRIVATE VARIABLES
    private variable _mobj ""
}

#==============================================================================
# CLASS: CopyMgr
#==============================================================================
# This is a wrapper arround the "mdsc::copy" command.
#==============================================================================
if {[itcl::find class CopyMgr] != ""} {
    itcl::delete class CopyMgr
}
itcl::class CopyMgr {
    constructor {args} {
	eval configure $args
    }

    destructor {
    }

    # Commit suicide...
    public method delete {} {
	itcl::delete object $this
    }

    public method copyfrom {memobj channel args} {
	set handle [$memobj get_handle]
	eval mdsc::copy from [list $handle] [list $channel] $args
    }

    public method copyto {memobj channel args} {
	set handle [$memobj get_handle]
	eval mdsc::copy to [list $handle] [list $channel] $args
    }

    public method copy {direction memobj channel args} {
	set handle [$memobj get_handle]
	eval mdsc::copy $direction [list $handle] [list $channel] $args
    }

    public method info {{handle ""}} {
	if {$handle == ""} {
	    return [mdsc::copy info]
	} else {
	    return [mdsc::copy info $handle]
	}
    }

    public method forget {handle} {
	mdsc::copy forget $handle
    }
}

