#!/bin/sh
#\
exec tclsh "$0" "$@"

#-----------------------------------------------------------------------------
# do_fname
#-----------------------------------------------------------------------------
# Parse the file
# Append the data to the DATA global variable
#-----------------------------------------------------------------------------
proc do_fname {fname} {

    global DATA
    if {![info exists DATA]} {
	set DATA {}
    }

    set fp [open $fname]
    set lineno 0
    while {![eof $fp]} {
	set line [gets $fp]
	incr lineno
	if {![regexp {STAT:} $line]} {
	    continue
	}
	if {![regexp { tstart= ([^ ]+)} $line dummy tstart]} {
	    continue
	}
	if {![regexp { tend= ([^ ]+)} $line dummy tend]} {
	    continue
	}
	if {![regexp { nbytes= ([^ ]+)} $line dummy nbytes]} {
	    continue
	}
	if {![regexp { status= ([^ ]+)} $line dummy status]} {
	    continue
	}
	if {$status != "end"} {
	    continue
	}
	if {![string is double -strict $tstart]} {
	    puts stderr "${fname}:${lineno}: Invalid tstart \"$tstart\""
	    continue
	}
	if {![string is double -strict $tend]} {
	    puts stderr "${fname}:${lineno}: Invalid tend \"$tend\""
	    continue
	}
	if {![string is double -strict $nbytes]} {
	    puts stderr "${fname}:${lineno}: Invalid nbytes\"$nbytes\""
	    continue
	}
	lappend DATA [list $tstart $tend $nbytes]
    }
}

#-----------------------------------------------------------------------------
# do_data
#-----------------------------------------------------------------------------
# Process the data stored in the DATA global variable
# Each item is a list with 3 items:
#	tstart: time the copy started
#	tend  : time the copy ended
#	nbytes: total number of bytes transferred
#
# What we calculate is an average of the transfer rate.
# We assume that during the copy the xfer rate was constant
#-----------------------------------------------------------------------------
proc do_data {files} {

    global DATA

    set timeline {}
    foreach x $DATA {
	set tstart [lindex $x 0]
	set tend [lindex $x 1]
	set nbytes [lindex $x 2]
	set dt [expr {$tend-$tstart}]
	if {$dt == 0} {set dt 0.5}
	set rate [expr {1.0 * $nbytes / $dt / 1024.0 / 1024.0}]

	lappend timeline [list $tstart $rate]
	lappend timeline [list $tend [expr {0 - $rate}]]
    }

    set timeline [lsort -integer -index 0 $timeline]

    # Now combine entries with the same "t"
    set previous_t ""
    set previous_rate ""
    set new_timeline {}

if {0} {
    foreach x $timeline {
	set t [lindex $x 0]
	set rate [lindex $x 1]
	if {$previous_t == ""} {
	    # This is the first entry
	    #
	    set previous_t $t
	    set previous_rate $rate
	} elseif {$t == $previous_t} {
	    # Same time as before
	    # Just add the rates...
	    set previous_rate [expr {$previous_rate + $rate}]
	} else {
	    # we have moved forward in time...
	    #
	    lappend new_timeline [list $previous_t $previous_rate]
	    set previous_t $t
	    set previous_rate $rate
	}
    }
    if {$previous_t != ""} {
	lappend new_timeline [list $previous_t $previous_rate]
    }
    set timeline $new_timeline
}

    array set rate_array {}
    set total_rate 0
    foreach x $timeline {
	set t [lindex $x 0]
	set drate [lindex $x 1]
	set total_rate [expr {$total_rate + $drate}]
	set rate_array($t) $total_rate
    }
    set t0 ""
	set title [string range [files] 0 20]
	puts "TitleText: Server throughput ($tl)"
	puts "XUnitText: time (sec)"
	puts "YUnitText: throughput (MB/sec)" 
	puts ""
	puts "\"$title\""
    foreach t [lsort -integer [array names rate_array]] {
	set r [format "%.3f" $rate_array($t)]
	if {$t0 == ""} {
	    set t0 $t
	}
	puts "[expr {$t - $t0}] $r"
    }
}

if {$argv == ""} {
    puts stderr "Usage: [file tail [info script]] file1 file2 ..."
    puts stderr "
This program reads the log files generated by the \"mdsc_test1.tcl\"
program and calculate the transfer rate at various momments in time
First column of output is time in seconds, second is the average
transfer rate at that point in time.
"
    exit 1
}
foreach file $argv {
    do_fname $file
}
do_data $argv
