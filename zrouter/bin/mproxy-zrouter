#!/bin/ksh -p
# Multiple Architecture Wrapper
# (c) Manolis Tsangaris, mtlib open source library (mtlib@karpathos.net)
#
# mproxy should reside on the bin directory and be symlinked to any
# program. Upon execution, mproxy will exec the same binary as it is called
# but residing in the appropriate architecture directory.
# for example, if foo is -> mproxy, then running bin/foo will actually run
# ../bin.$ARCH/program (where ARCH is set based on the switch statement below 
#

function dirname {
	echo ${1%/*}
}

function basename {
	echo ${1##*/}
}

function die {
	echo "$me: $*" 1>&2
	exit 1
}

dir=$(dirname $(dirname $0))
if [[ $dir = . ]]
then
        bdir=$(pwd | awk -F\/ '{print $NF}')
        dir=$(pwd | awk -F/$bdir '{print $1}')
fi

if [[ $dir = $0 ]]
then
        bdir=$(pwd | awk -F\/ '{print $NF}')
        dir=$(pwd | awk -F/$bdir '{print $1}')
fi


pdir=$(dirname $(dirname $(dirname $0)))"/pubtools"
me=`basename $0`
base=$dir
mpt_home=${0%/*}"/"
# echo "PDIR = $pdir"
# echo "ME = $me"
# echo "BASE = $base"
# echo "MPT_HOME = $mpt_home"

# --------------------------------------------------------------------------
# determine here the path where everything should be based on $ARCH
# set the appropriate LD_LIBRARY_PATH
# MPT_ARCH is an environment variable = to 32, 64 or blank.
# 	blank or not setting $MPT_ARCH will default to native platform binary
#	32 will execute 32 bit binary request of platform
#	64 will execture 64 bit binary request on 64 bit platform only.
# --------------------------------------------------------------------------
#ARCH=`uname -s`.`uname -m`.`echo $MPT_ARCH`
#TOPLEVEL=`echo $me | grep "64"`
case $me in
	zui)
	ARCH=`uname -s`.`uname -m`."32"
	me=`echo $me | awk -F\32 '{print $1}'`
	;;
	turborc32)
	ARCH=`uname -s`.`uname -m`."32"
	me=`echo $me | awk -F\32 '{print $1}'`
	;;
	turborc64)
	ARCH=`uname -s`.`uname -m`."64"
	me=`echo $me | awk -F\64 '{print $1}'`
	;;
	ade32)
	ARCH=`uname -s`.`uname -m`."32"
	me=`echo $me | awk -F\32 '{print $1}'`
	;;
	ade64)
	ARCH=`uname -s`.`uname -m`."64"
	me=`echo $me | awk -F\64 '{print $1}'`
	;;
	milos32)
	ARCH=`uname -s`.`uname -m`."32"
	me=`echo $me | awk -F\32 '{print $1}'`
	;;
	milos64)
	ARCH=`uname -s`.`uname -m`."64"
	me=`echo $me | awk -F\64 '{print $1}'`
	;;
	*)
	ARCH=`uname -s`.`uname -m`.`echo $MPT_ARCH`
esac
#if [[ $TOPLEVEL == $me ]]
#then
#	ARCH=`uname -s`.`uname -m`."64"
#	me=`echo $me | awk -F\64 '{print $1}'`
#else
#	ARCH=`uname -s`.`uname -m`.`echo $MPT_ARCH`
#fi
BRANCH="zrouter"
# echo "ARCH = $ARCH"
case "$ARCH" in
	Linux.i686.)
		p=i386-linux
		LD_LIBRARY_PATH=$base/$p/$BRANCH/lib:$pdir/$p/lib:$LD_LIBRARY_PATH
		PATH=$base/$p/$BRANCH/bin:$pdir/$p/bin:$PATH
		TCL_LIBRARY=$pdir/$p/lib/tcl8.5
		TK_LIBRARY=$pdir/$p/lib/tk8.5

		;;
	Linux.i686.32)
		p=i386-linux
		LD_LIBRARY_PATH=$base/$p/$BRANCH/lib:$pdir/$p/lib:$LD_LIBRARY_PATH
		PATH=$base/$p/$BRANCH/bin:$pdir/$p/bin:$PATH
                TCL_LIBRARY=$pdir/$p/lib/tcl8.5
                TK_LIBRARY=$pdir/$p/lib/tk8.5

		;;
	Linux.i686.64)
		p=i386-linux
		LD_LIBRARY_PATH=$base/$p/$BRANCH/lib:$pdir/$p/lib:$LD_LIBRARY_PATH
		PATH=$base/$p/$BRANCH/bin:$pdir/$p/bin:$PATH
                TCL_LIBRARY=$pdir/$p/lib/tcl8.5
                TK_LIBRARY=$pdir/$p/lib/tk8.5


		;;
	Linux.x86_64.)
		p=x86-64-linux
                LD_LIBRARY_PATH=$base/$p/$BRANCH/lib:$pdir/$p/lib:$LD_LIBRARY_PATH
		PATH=$base/$p/$BRANCH/bin:$pdir/$p/bin:$PATH
                TCL_LIBRARY=$pdir/$p/lib/tcl8.5
                TK_LIBRARY=$pdir/$p/lib/tk8.5

                ;;
	Linux.x86_64.32)
               p=i386-linux
                LD_LIBRARY_PATH=$base/$p/$BRANCH/lib:$pdir/$p/lib:$LD_LIBRARY_PATH
		PATH=$base/$p/$BRANCH/bin:$pdir/$p/bin:$PATH
                TCL_LIBRARY=$pdir/$p/lib/tcl8.5
                TK_LIBRARY=$pdir/$p/lib/tk8.5

                ;;
	Linux.x86_64.64)
		p=x86-64-linux
                LD_LIBRARY_PATH=$base/$p/$BRANCH/lib:$pdir/$p/lib:$LD_LIBRARY_PATH
		PATH=$base/$p/$BRANCH/bin:$pdir/$p/bin:$PATH
                TCL_LIBRARY=$pdir/$p/lib/tcl8.5
                TK_LIBRARY=$pdir/$p/lib/tk8.5

                ;;
  	   SunOS.*)
		p=sun7
		LD_LIBRARY_PATH=$base/$p/lib:$LD_LIBRARY_PATH
		;;
       *) die "unsupported OS/platform: $os";;
esac

export MPT_HOME=$mpt_home


# echo " dir: $dir"
# echo "base: $base"
# echo "prog: $me"
# echo "MPT_ARCH: $MPT_ARCH"
# echo "MPT_HOME: $MPT_HOME"

f=$base/$p/$BRANCH/bin/$me
test -f $f || die "cannot locate program '$me' (in $base/$p/$BRANCH/bin)"

#export LD_LIBRARY_PATH TCL_LIBRARY TK_LIBRARY
export LD_LIBRARY_PATH PATH TCL_LIBRARY TK_LIBRARY
exec $f "$@"
