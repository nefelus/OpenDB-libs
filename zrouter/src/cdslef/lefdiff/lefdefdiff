#!/bin/sh

set -f

OS_TYPE=`uname -s`

gnu=0
outFile=0

for arg in $*
do
  if [ $arg = "-d" ] ; then
     gnu=1
  fi
done

if [ "$OS_TYPE" = "Linux" ] ; then
  if [ $gnu = 1 ] ; then
    ld_diff="`/usr/bin/dirname $0`/ld_diff -d"
  else
    ld_diff="`/usr/bin/dirname $0`/ld_diff"
  fi
else
  if [ $gnu = 1 ] ; then
    ld_diff="`/bin/dirname $0`/ld_diff -d"
  else
    ld_diff="`/bin/dirname $0`/ld_diff"
  fi
fi
if [ ! -x $ld_diff ] ; then
  ld_diff="/bin/diff"
fi

# arguments combination can be:
# lefdefdiff -lef|def inFilename1 inFilename2
# lefdefdiff -lef|def inFilename1 inFilename2 -o outFilename
# lefdefdiff -lef|def inFilename1 inFilename2 -o outFilename -quick
# lefdefdiff -lef|def inFilename1 inFilename2 -o outFilename -quick -d
# lefdefdiff -lef|def inFilename1 inFilename2 -o outFilename -d -quick
# lefdefdiff -lef|def inFilename1 inFilename2 -d -quick
# lefdefdiff -lef|def inFilename1 inFilename2 -quick -d
# lefdefdiff -lef|def inFilename1 inFilename2 -quick
# lefdefdiff -lef|def inFilename1 inFilename2 -d

quick=0

if [ $# = 1 ] ; then
   if [ "$1" = "-help" ] || [ "$1" = "-h" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller
      echo "   set of changes.
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   fi
fi

# minimum argument is 3
if [ $# -lt 3 ] ; then
   echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick]"
   echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
   echo "   -d option is for gnu diff (unix platform only) to find a smaller"
   echo "   set of changes."
   echo "   User needs to verify the accuracy of the diff results."
   exit 1
fi

# -quick or -d
if [ $# = 4 ] ; then
   if [ "$4" = "-quick" ] ; then
      quick=1 
   elif [ "$4" != "-d" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   fi
fi

# -o outFilename or -quick -d or -d -quick
if [ $# = 5 ] ; then
   outFile=1
   if [ "$4" != "-o" ] && [ "$4" != "-quick" ] && [ "$4" != "-d" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   elif [ "$4" = "-quick" ] && [ "$5" = "-d" ] ; then
      quick=1
      outFile=0
   elif [ "$4" = "-d" ] && [ "$5" = "-quick" ] ; then
      quick=1
      outFile=0
   elif [ "$4" != "-o" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   fi
fi

# -o outFilename -quick or -o outFilename -d
if [ $# = 6 ] ; then
   outFile=1
   if [ "$4" != "-o" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   elif [ "$6" != "-quick" ] && [ "$6" != "-d" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   elif [ "$6" = "-quick" ] ; then
      quick=1
   fi
fi

# -o outFilename -quick -d or -o outFilename -d -quick
if [ $# = 7 ] ; then
   outFile=1
   if [ "$4" != "-o" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   elif [ "$6" != "-quick" ] && [ "$6" != "-d" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   elif [ "$6" = "-quick" ] && [ "$7" != "-d" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   elif [ "$6" = "-d" ] && [ "$7" != "-quick" ] ; then
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename] [-quick] [-d]"
      echo "   If \"-quick\" option is used, bdiff will be used to do the diff."
      echo "   -d option is for gnu diff (unix platform only) to find a smaller"
      echo "   set of changes."
      echo "   User needs to verify the accuracy of the diff results."
      exit 1
   fi
   quick=1
   if [ "$OS_TYPE" = "Linux" ] ; then
      quick=0;
   fi
fi

# split the following from unix & window_NT
if [ "$OS_TYPE" = "Windows_NT" ] ; then
   # it's a lef file
   if [ "$1" = "-lef" ] || [ "$1" = "-LEF" ] ; then
      lefdiff.exe $2 $3 lefOut1.$$ lefOut2.$$
      status=$?
      if [ $status != 0 ] ; then
         echo "Error is reading the input files, lefdefdiff stops execution!"
         exit $status
      fi
      if [ -f lefOut1S.$$ ] ; then # if sort file for file 1 in tmp, remove it
         rm lefOut1S.$$
      fi
      if [ -f lefOut2S.$$ ] ; then # if sort file for file 2 in tmp, remove it
         rm lefOut2S.$$
      fi
      if [ -f lefOut1.$$ ] ; then  # if both output files are there, it means
         if [ -f lefOut2.$$ ] ; then   # the parser parsed successfully
            sort lefOut1.$$ > lefOut1S.$$   # sort the output file
            sort lefOut2.$$ > lefOut2S.$$
            if [ $outFile = 1 ] ; then # user has requested to
                                       # save output in a file
               if [ -f $5 ] ; then # the file exist, remove it
                  rm $5
               fi
               echo "< $2" > $5
               echo "> $3" >> $5
               # -e #1 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'c' ... and replace it with
               #    "Changed:"
               # -e #2 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'd' ... and replace it with
               #    "Deleted:"
               # -e #3 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'a' ... and replace it with
               #    "Added:"
               diff  lefOut1S.$$ lefOut2S.$$ | \
               sed \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/' \
                  >> $5
            else
               echo "< $2"
               echo "> $3"
               # no output file, output to standard out
               diff lefOut1S.$$ lefOut2S.$$ | \
               sed \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/'
            fi
            rm lefOut1.$$ lefOut1S.$$ lefOut2.$$ lefOut2S.$$
         fi                       # remove all the temp files from
      fi
   elif [ "$1" = "-def" ] || [ "$1" = "-DEF" ] ; then   # it's a def file
      defdiff.exe $2 $3 defOut1.$$ defOut2.$$
      status=$?
      if [ $status != 0 ] ; then
         echo "Error is reading the input files, lefdefdiff stops execution!"
         exit $status
      fi
      if [ -f defOut1S.$$ ] ; then # if sort file for file 1 in tmp, remove it
         rm defOut1S.$$
      fi
      if [ -f defOut2S.$$ ] ; then # if sort file for file 2 in tmp, remove it
         rm defOut2S.$$
      fi
      if [ -f defOut1.$$ ] ; then   # if both output files are there, it means
         if [ -f defOut2.$$ ] ; then # the parser parsed successfully
            sort defOut1.$$ > defOut1S.$$   # sort the output file
            sort defOut2.$$ > defOut2S.$$
            if [ $outFile = 1 ] ; then # user has requested to
                                       # save output in a file
               if [ -f $5 ] ; then     # the file exist, remove it
                  rm $5
               fi
               echo "< $2" > $5
               echo "> $3" >> $5
               # -e #1 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'c' ... and replace it
               #    with "Changed:"
               # -e #2 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'd' ... and replace it
               #    with "Deleted:"
               # -e #3 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'a' ... and replace it
               #    with "Added:"
               diff  defOut1S.$$ defOut2S.$$ | \
               sed \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/' \
                  >> $5
         else
               echo "< $2"
               echo "> $3"
               # no output file, output to standard out
               diff defOut1S.$$ defOut2S.$$ | \
               sed \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                  -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/'
            fi
            rm defOut1.$$ defOut1S.$$ defOut2.$$ defOut2S.$$
         fi                       # remove all the temp files from /tmp
      fi
   else
      # neither -lef nor -def
      echo "Usage: lefdefdiff.exe -lef|-def inFilename1 inFilename2 [-o outFilename]"
   fi
else
   # it's a lef file
   if [ "$1" = "-lef" ] || [ "$1" = "-LEF" ] ; then
      # 11/23/99 - Wanda da Rosa, PCR 284352, make the temporary files unique
      #            per process
      lefdiff $2 $3 /tmp/lefOut1.$$ /tmp/lefOut2.$$
      # 11/22/99 - Wanda da Rosa, PCR 281498, check the return status
      status=$?
      if [ $status != 0 ] ; then
         echo "Error is reading the input files, lefdefdiff stops execution!"
         exit $status
      fi
      if [ -f /tmp/lefOut1S.$$ ] ; then # if sort file in tmp, remove it
         rm /tmp/lefOut1S.$$
      fi
      if [ -f /tmp/lefOut2S.$$ ] ; then # if sort file in tmp, remove it
         rm /tmp/lefOut2S.$$
      fi
      if [ -f /tmp/lefOut1.$$ ] ; then      # if both output files are there, 
         if [ -f /tmp/lefOut2.$$ ] ; then   # the parser parsed successfully
            sort /tmp/lefOut1.$$ > /tmp/lefOut1S.$$   # sort the output file
            sort /tmp/lefOut2.$$ > /tmp/lefOut2S.$$ 
            if [ $outFile = 1 ] ; then # user has requested to
                                       # save output in a file
               if [ -f $5 ] ; then # the file exist, remove it
                  rm $5
               fi 
               echo "< $2" > $5
               echo "> $3" >> $5
               # -e #1 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'c' ... and replace it with
               #    "Changed:"
               # -e #2 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'd' ... and replace it with
               #    "Deleted:"
               # -e #3 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'a' ... and replace it with
               #    "Added:"
               if [ $quick = 1 ] ; then
                  bdiff  /tmp/lefOut1S.$$ /tmp/lefOut2S.$$ | \
                  sed \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/' \
                     >> $5
               else
                     $ld_diff  /tmp/lefOut1S.$$ /tmp/lefOut2S.$$ | \
                  sed \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/' \
                     >> $5
               fi
            else
               echo "< $2"
               echo "> $3"
               # no output file, output to standard out
               if [ $quick = 1 ] ; then
                  bdiff /tmp/lefOut1S.$$ /tmp/lefOut2S.$$ | \
                  sed \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/'
               else
                  $ld_diff /tmp/lefOut1S.$$ /tmp/lefOut2S.$$ | \
                  sed \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/'
               fi
            fi
            rm /tmp/lefOut1.$$ /tmp/lefOut1S.$$ /tmp/lefOut2.$$ /tmp/lefOut2S.$$
         fi                       # remove all the temp files from /tmp
      fi
   elif [ "$1" = "-def" ] || [ "$1" = "-DEF" ] ; then   # it's a def file
      defdiff $2 $3 /tmp/defOut1.$$ /tmp/defOut2.$$
      # 11/22/99 - Wanda da Rosa, PCR 281498, check the return status
      status=$?
      if [ $status != 0 ] ; then
         echo "Error is reading the input files, lefdefdiff stops execution!"
         exit $status
      fi
      if [ -f /tmp/defOut1S.$$ ] ; then # if sort file in tmp, remove it
         rm /tmp/defOut1S.$$
      fi
         if [ -f /tmp/defOut2S.$$ ] ; then # if sort file in tmp, remove it
         rm /tmp/defOut2S.$$
      fi
      if [ -f /tmp/defOut1.$$ ] ; then    # if both output files are there,
         if [ -f /tmp/defOut2.$$ ] ; then # the parser parsed successfully
            sort /tmp/defOut1.$$ > /tmp/defOut1S.$$   # sort the output file
            sort /tmp/defOut2.$$ > /tmp/defOut2S.$$
            if [ $outFile = 1 ] ; then # user has requested to
                                       # save output in a file
               if [ -f $5 ] ; then     # the file exist, remove it
                  rm $5
               fi
               echo "< $2" > $5
               echo "> $3" >> $5
               # -e #1 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'c' ... and replace it 
               #    with "Changed:"
               # -e #2 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'd' ... and replace it
               #    with "Deleted:"
               # -e #3 below:
               #    find something that matches begining of line, 1 or more
               #    numbers followed by 0 or 1 commas follow by 0 or more
               #    numbers followed by the letter 'a' ... and replace it
               #    with "Added:"
               if [ $quick = 1 ] ; then
                  bdiff  /tmp/defOut1S.$$ /tmp/defOut2S.$$ | \
                  sed \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/' \
                     >> $5
               else
                  $ld_diff  /tmp/defOut1S.$$ /tmp/defOut2S.$$ | \
                  sed \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/' \
                     >> $5
               fi
            else
               echo "< $2"
               echo "> $3"
               # no output file, output to standard out
               if [ $quick = 1 ] ; then
                  bdiff /tmp/defOut1S.$$ /tmp/defOut2S.$$ | \
                  sed \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/'
               else
                  $ld_diff /tmp/defOut1S.$$ /tmp/defOut2S.$$ | \
                  sed \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*c[0-9][0-9]*,\{0,1\}[0-9]*/Changed:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*d[0-9][0-9]*,\{0,1\}[0-9]*/Deleted:/' \
                     -e 's/^[0-9][0-9]*,\{0,1\}[0-9]*a[0-9][0-9]*,\{0,1\}[0-9]*/Added:/'
               fi
            fi
            rm /tmp/defOut1.$$ /tmp/defOut1S.$$ /tmp/defOut2.$$ /tmp/defOut2S.$$
         fi                       # remove all the temp files from /tmp
      fi
   else
      # neither -lef nor -def
      echo "Usage: lefdefdiff -lef|-def inFilename1 inFilename2 [-o outFilename]"
   fi
fi
