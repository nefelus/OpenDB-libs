#ifndef ADS_DB_VIA_H
#define ADS_DB_VIA_H

#ifndef ADS_H
#include "ads.h"
#endif

#ifndef ADS_GEOM_H
#include "geom.h"
#endif

#ifndef ADS_DB_TYPES_H
#include "dbTypes.h"
#endif

#ifndef ADS_DB_ID_H
#include "dbId.h"
#endif

#ifndef ADS_DB_OBJECT_H
#include "dbObject.h"
#endif

#ifndef ADS_DB_VIA_PARAMS_H
#include "dbViaParams.h"
#endif

BEGIN_NAMESPACE_ADS

class _dbTechLayer;
class _dbTechViaGenerateRule;
class _dbBox;
class _dbDatabase;
class dbIStream;
class dbOStream;
class dbDiff;

struct _dbViaFlags
{
    uint                     _is_rotated  : 1;
    uint                     _is_tech_via : 1;
    uint                     _has_params  : 1;
    dbOrientType::Value      _orient      : 4;
    uint                     _spare_bits  : 25;
};
    
class _dbVia : public dbObject
{
  public:
    // PERSISTANT-MEMBERS
    _dbViaFlags                  _flags;   // 5.6 DEF
    char *                       _name;
    char *                       _pattern;
    dbId<_dbBox>                 _bbox;            // Caching the bbox speeds up defin imports.
    dbId<_dbBox>                 _boxes;
    dbId<_dbTechLayer>           _top;             // Caching the layer speeds up defin imports.
    dbId<_dbTechLayer>           _bottom;          // Caching the layer speeds up defin imports.
    dbId<_dbTechViaGenerateRule> _generate_rule;   // via generated by tech-via-rule, 5.6 DEF
    uint                         _rotated_via_id;  // via-id that was roated to produce this via, 5.6 DEF
    _dbViaParams                 _via_params;      // params used to generate this via, 5.6 DEF

    _dbVia( _dbDatabase *, const _dbVia & v );
    _dbVia( _dbDatabase * );
    ~_dbVia();

    int operator==( const _dbVia & rhs ) const;
    int operator!=( const _dbVia & rhs ) const { return ! operator==(rhs); }
    int operator<( const _dbVia & rhs ) const
    {
        return strcmp( _name, rhs._name ) < 0;
    }
    
    void differences( dbDiff & diff, const char * field, const _dbVia & rhs ) const;
    void out( dbDiff & diff, char side, const char * field ) const;
};

dbOStream & operator<<( dbOStream & stream, const _dbVia & v );
dbIStream & operator>>( dbIStream & stream, _dbVia & v );

END_NAMESPACE_ADS

#endif
