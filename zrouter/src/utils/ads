#!/bin/ksh -p
#
# Generic wrapper script for ads
# this script sets up the environment for other ads tools to run
#
# USAGE:
#
# ads -h : to get the usage
# ads cmd: run any ads commands (zroute and zui)
# ads ksh: run ksh or any other shell
# 
unset ENV

function die {
	echo "ads: $*" 1>&2
	exit 1
}

function set_msh {
if [[ -e ./msh.conf ]] then
MSHCONFIG="$(pwd)/msh.conf"
#echo $MSHCONFIG
elif [[ -e $HOME/msh.conf ]] then
MSHCONFIG="$HOME/msh.conf"
#echo $MSHCONFIG
elif [[ -e $ADSHOME/conf/msh.conf ]] then
MSHCONFIG="$ADSHOME/conf/msh.conf"
#echo $MSHCONFIG
else
die "msh.conf is not found"
fi
}


args=$@
dir=`dirname $0`
case $dir in
        .) TOP=$(dirname $(pwd)) ;;
        *) TOP=$(dirname $dir) ;;
esac


# default ADSHOME directory
export ADSHOME=$TOP

RC=$ADSHOME/conf/ads.conf

test -f $RC && . $RC

test -d "$ADSHOME" || {
	die "cannot figure out ADSHOME top directory"
}
test -d "$ADSHOME/pubtools/i386-linux/bin"    || die "$ADSHOME: does not contain pubtools"
test -d "$ADSHOME/ads/i386-linux/zrouter/bin" || die "$ADSHOME: does not contain zrouter executables"

export ADSHOME

export ADS_PATH=$PATH
export ADS_LD_LIBRARY_PATH=$LD_LIBRARY_PATH

EXT=$ADSHOME/pubtools
ADS=$ADSHOME/ads/bin

os=`uname -s`.`uname -m`
case "$os" in
        Linux.*86)
                p=i386-linux
                ISLIB=`ldd $TOP/pubtools/i386-linux/bin/tclsh8.4 | /bin/grep found | /usr/bin/wc -l`
                if [ $ISLIB != 0 ]; then
                xlib=$TOP/lib/lib-linux:$TOP/pubtools/$p/lib:$TOP/ads/$p/zrouter/lib:$TOP/ads/$p/msh/lib
                else
                xlib=$TOP/pubtools/$p/lib:$TOP/ads/$p/zrouter/lib:$TOP/ads/$p/msh/lib
                fi
                ;;
        Linux.x86_64)
                p=i386-linux
                xlib=$TOP/pubtools/$p/lib:$TOP/ads/$p/zrouter/lib::$TOP/ads/$p/msh/lib
                ;;
        *) echo "$os: unsupported OS/platform: $os" 1>&2 ; exit -1;;
esac

export TCL_LIBRARY=$EXT/lib/tcl8.4
export TK_LIBRARY=$EXT/lib/tk8.4

export  ADS_LICENSE=$ADSHOME/conf/ads_license.dat
export	PATH=$EXT/bin:$ADS:$PATH
set_msh
export	MSHCONFIG="$MSHCONFIG"

# Check for FlexLM.so
if [[ ! -e $EXT/i386-linux/lib/tclflexlm-1.0/FlexLM.so ]] ; then
echo "TCL library FlexLM.so do no exist under 32bit pubtools"
exit
fi
if [[ ! -e $EXT/x86-64-linux/lib/tclflexlm-1.0/FlexLM.so ]] ; then
echo "TCL library FlexLM.so do no exist under 64bit pubtools"
exit
fi
ads_port=`grep "ads_port " $MSHCONFIG | awk '{print $2}'`
ads_lic=`grep "ads_lic " $MSHCONFIG | awk '{print $2}'`
if [ -z $ads_port ] ; then
        echo "LM_LICENSE_FILE environment is not set \! Please check $MSHCONFIG."
        exit
fi

if [ -z $ads_lic ] ; then
echo "LM_LICENSE_FILE environment is not set \! Please check $MSHCONFIG."
exit
fi

if [[ -z $(grep "ads_port " $MSHCONFIG | grep ":") ]] ; then
	if [[ -z $(env | grep LM_LICENSE_FILE) ]] ; then
	export LM_LICENSE_FILE=$ads_port"@"$ads_lic
	else
	export LM_LICENSE_FILE=$ads_port"@"$ads_lic:$LM_LICENSE_FILE
	fi
else
oneport=$(echo $ads_port | awk -F\: '{print $1}')
twoport=$(echo $ads_port | awk -F\: '{print $2}')
threeport=$(echo $ads_port | awk -F\: '{print $3}')
oneserver=$(echo $ads_lic | awk -F\: '{print $1}')
twoserver=$(echo $ads_lic | awk -F\: '{print $2}')
threeserver=$(echo $ads_lic | awk -F\: '{print $3}')
	if [[ -z $(env | grep LM_LICENSE_FILE) ]] ; then
	export LM_LICENSE_FILE=$oneport@$oneserver,$twoport@$twoserver,$threeport@$threeserver
	else
	export LM_LICENSE_FILE=$oneport@$oneserver,$twoport@$twoserver,$threeport@$threeeserver:$LM_LICENSE_FILE
	fi
ads_port=$(echo $ads_port | awk -F\: '{print $1}')
ads_lic=$(echo $ads_lic |awk -F\: '{print $1}')
echo "ADS_PORT = $ads_port"
echo "ADS_LILC = $ads_lic"
fi

if [ -e $ADSHOME/license/bin/lmstat ] ; then
ISATHENA=`$ADSHOME/license/bin/lmstat -c $ads_port@$ads_lic | grep athena | cut -d":" -f1`
fi

if [ -z $ISATHENA ] ; then
        echo "  License Daemon for Athena is not running."
        exit 1
fi

if [[ -e $ADSHOME/bin/check_license ]] ; then
	typeset integer ads_expiration=`$ADSHOME/bin/check_license ads`
	typeset integer exp_setup=$(grep "LIC_NOTIFY" $MSHCONFIG | awk '{print $2}')
	if [[ -z "$exp_setup" ]] ; then
	typeset integer exp_setup="14"
	fi
	if [[ ! -z "$ads_expiration" && "$ads_expiration" -le "$exp_setup" ]] ; then

	if [[ ! -e ./.ads_license_check ]] ; then
		$(touch ./.ads_license_check)
		print "Athena Software License will expire in $ads_expiration day"
		sleep 30
	else
		chexdate=$(ls -al ./.ads_license_check | awk '{print $6"_"$7}')
		thisday=$(date | awk '{print $2"_"$3}')

		if [[ "$chexdate" -ne "thisday" ]] ; then
		print "Athena Software License will expire in $ads_expiration day"
		sleep 30
		fi

	fi

	fi
fi


case "$1" in 
	ksh) export PS1="ksh(zr)> "; exec ksh -i -p   ;;
	csh) export PS1="csh(zr)> "; exec csh -i   ;;
	zui) export PS1="ksh(zr)> "; exec zui "$@" ;;
	zproxytest) shift 2>/dev/null ; exec zproxytest "$@" ;;
	run_test) shift 2>/dev/null ; exec run_test "$@" ;;
	turborc64) shift 2>/dev/null ; exec turborc64 "$@" ;;
	ade) shift 2>/dev/null ; exec ade32 "$@" ;;
	ade64) shift 2>/dev/null ; exec ade64 "$@" ;;
	turbopro) shift 2>/dev/null ; exec turbopro "$@" ;;
	turbopro64) shift 2>/dev/null ; exec turbopro64 "$@" ;;
	milos) shift 2>/dev/null ; exec milos32 "$@" ;;
	milos64) shift 2>/dev/null ; exec milos64 "$@" ;;
	  *) echo "	Error: $1 is not a Valid Command Option!" ; exit ;;
esac
