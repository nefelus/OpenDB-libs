#!/bin/ksh -p

function verify_env {
ADSHOME=$(env | grep ADSHOME | cut -d"=" -f2)
MSHCONFIG=$(env | grep MSHCONFIG | cut -d"=" -f2)
if [[ -z "$ADSHOME" || -z "$MSHCONFIG" ]] then
	TOP=$(dirname $(dirname $0))
	if [[ $TOP = . ]] ; then
	BTOP=$(pwd | awk -F\/ '{print $NF}')
	TOP=$(pwd | awk -F/$BTOP '{print $1}')
	fi
	ADSHOME="$TOP"
	MSHCONFIG="$TOP/conf/msh.conf"
else
	TOP="$ADSHOME"
fi

if [[ ! -d "$ADSHOME" || ! -f "$MSHCONFIG" ]] then
        die "Binary tree/file Missing: ADSHOME=$ADSHOME, MSHCONFIG=$MSHCONFIG"
fi
}


function abs {
# Function to evaluate the absolute value of a number
# Check for numeric input
if expr $1 + 0 2>/dev/null 1>&2 ; then
# Is the number negative?
if [ $1 -lt 0 ] ; then
echo `expr 0 - $1`
else
echo $1
fi
return 0 # OK
else
return 1 # Not a number
fi
}

function month2num {
        typeset month=$(echo $1 |tr "[:upper:]" "[:lower:]")
        case $month in
        jan )
                lmon=1;;
        feb )
                lmon=2;;
        mar )
                lmon=3;;
        apr )
                lmon=4;;
        may )
                lmon=5;;
        jun )
                lmon=6;;
        jul )
                lmon=7;;
        aug )
                lmon=8;;
        sep )
                lmon=9;;
        oct )
                lmon=10;;
        nov )
                lmon=11;;
        dec )
                lmon=12;;
        * )
                print "Error Month to numeric conversion"
        esac
}


function ck_Lic_exp {
typeset da="$1"

typeset i CMON=$(date '+%m')
typeset i CDATE=$(date '+%d')
typeset i CYEAR=$(date '+%Y')

typeset LWMON=$(echo $da | awk -F\- '{print $2}')
typeset i LDATE=$(echo $da | awk -F\- '{print $1}')
typeset i LYEAR=$(echo $da | awk -F\- '{print $3}')
month2num $LWMON
typeset LMON=$lmon
if [[ $CYEAR -gt $LYEAR ]] ; then
echo "Expired"
fi

if [[ $CYEAR -eq $LYEAR ]] && [[ $CMON -gt $lmon ]] ; then
echo "Expired"
fi

if [[ $CYEAR -eq $LYEAR ]] && [[ $CMON -eq $lmon ]] && [[ $CDATE -gt $LDATE ]] ; then
echo "Expired"
fi

if [[ $CYEAR -eq $LYEAR ]] && [[ $(($LMON - $CMON)) == "1" ]] ; then
        typeset i ncount="1"
        while [[ -z $(cal $CMON $CYEAR | tail -6 | tail -$ncount) ]] ; do
        ncount=$(($ncount + 1))
        done
        LASTDATE=$(cal $CMON $CYEAR | tail -6 | tail -$ncount | awk '{print $NF}')
        typeset i rdate=$(($LASTDATE - $CDATE + $LDATE))
        echo "$rdate"
fi

if [[ $CYEAR -eq $LYEAR ]] && [[ $(($LMON - $CMON)) == "0" ]] && [[ $CDATE -le $LDATE ]]; then
        typeset i rdate=$(($LDATE - $CDATE))
        echo "$rdate"
fi

if [[ $(($LYEAR - $CYEAR)) == "1" ]] ; then
        if [[ $LMON == "1" && $CMON == "12" ]] ; then
        typeset i ncount="1"
                while [[ -z $(cal $CMON $CYEAR | tail -6 | tail -$ncount) ]] ; do
                ncount=$(($ncount + 1))
        done
        LASTDATE=$(cal $CMON $CYEAR | tail -6 | tail -$ncount | awk '{print $NF}')
        typeset i rdate=$(($LASTDATE - $CDATE + $LDATE))
        echo "$rdate"

        fi
fi

}

# ##############################################
# Top of Program
# ##############################################
info_command=""
quiet_command=""
if [[ ! -z $(echo $1 | grep "-") ]] ; then
case $1 in
	'-a')
		input1="all"
		input2=""
		;;
	'-q')	quiet_command="yes"
		input1="all"
		;;
	'-i')	info_command="yes"
		input1="all"
		;;
	'-help')
		print "Usage: check_license $1 $2"
		print "check_license -help = This menu"
		print "check_license -i ads = List ADS license information"
		print "check_license ads = report expiration within 30 days"
		print "check_license -a = report expiration of all configured tools"
		print "check_license -i = List all configured tools"
		exit
		;;
	*)
                print "Usage: check_license $1 $2"
                print "check_license -help = This menu"
                print "check_license -i ads = List ADS license information"
                print "check_license ads = report expiration within 30 days"
                print "check_license -a = report expiration of all configured tools"
                print "check_license -i = List all configured tools"
		exit
esac
#input1=$(echo $2)
else
input1=$(echo $1)
input2=$(echo $2)
fi

verify_env
dx=""
case $input1 in 
	'ads')
		p_list="ads"
		;;
	'all')
		p_list=$(grep "_port" $TOP/conf/msh.conf | awk '{print $1}' | awk -F\_port '{print $1}')
		;;
	*)
                print "Usage: check_license $1 $2"
                print "check_license -help = This menu"
                print "check_license -i ads = List ADS license information"
                print "check_license ads = report expiration within 30 days"
                print "check_license -a = report expiration of all configured tools"
                print "check_license -i = List all configured tools"
		exit
		;;
esac


for eaitem in $p_list ; do
	lserver=$(grep $eaitem"_lic" $MSHCONFIG | awk '{print $2}')
	port=$(grep $eaitem"_port" $MSHCONFIG | awk '{print $2}')
	if [[ $lserver != "" ]] ; then
	licdate_list=`$ADSHOME/license/bin/lmstat -i -c "$port@$lserver" | awk '{print $4}' | grep "-" | sort | uniq 2> /dev/null`
	for qdat in $licdate_list ; do
	if [[ "$info_command" = "yes" ]] ; then
	print "License Information from daemon port $port on server $lserver"
	data_info=$($ADSHOME/license/bin/lmstat -i -c "$port@$lserver" | grep $qdat)
	print "$data_info"
	print ""
	else
	ck_out=$(ck_Lic_exp $qdat)
		if [[ "$ck_out" != "" ]] ; then
			if [[ "$quiet_command" == "yes" ]] ; then
			expdat_items=$($ADSHOME/license/bin/lmstat -i -c $port@$lserver | grep $qdat)
			print "$ck_out"
			else
			expdat_items=$($ADSHOME/license/bin/lmstat -i -c $port@$lserver | grep $qdat)
			print "$expdat_items"
			print "$eaitem will expire in $ck_out day on $qdat"
			fi
		fi
	fi
	done
	fi
done
