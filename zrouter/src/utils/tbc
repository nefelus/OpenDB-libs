#!/bin/ksh
#
# TCL bytecode compiler
# Needs the tclcompiler
#
# Compiles all tcl files into the equivalent tcl bytecode files
# It will replace tcl files by the bytecode files
# Usage: tcb file file ...
#
#
function die {
	echo "tbc: $*" 1>&2
	exit 1
}
function warning {
	echo "tbc: $*" 1>&2
}

# compile a tcl file
function tcompile {
	src=$1
	dst=$2
	tclcompiler - < $src > $src.tcb || {
		rm $src.tcb
	}
	grep -v "^# Commercial license" $src.tcb > $dst
	rm -f $src.tcb
}

function mkexe {
	out=$1 ; shift
	sed -n '1,/exec/p' $1 > $out-
	echo "# -- compiled from $1" >> $out-
	sed '1,/exec/d' $1 |
	tclcompiler - | grep -v "^# Commercial license" >> $out-
	chmod +x $out-
	mv $out- $out
}

tc=$(whence tclcompiler)
test "$tc" || die "tclcompiler: not found"

for i in $@ 
do
	# -- leave symbolic links alone
	test -h $i && continue
	case $i in
		*/pkgIndex.tcl)
			warning "skipping $i"
		;;
		*.itcl|*.tcl)
			tcompile $i $i
		;;
		*)
			# -- is it executable?
			test -x && mkexe $i $i 
		;;
	esac
done
